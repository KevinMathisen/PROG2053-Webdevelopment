
body {
	margin: 0px;
}

/*Implementation of task 3b, use CSS grid layout to create a responsive body with sidebars.*/
#mainContainer {
	display: grid;
	grid-template: 
		"header header header" auto
		". main . " auto
		"footer footer footer" auto
		/ 20px auto 20px;
}
header {
	grid-area: header;
	border-bottom: 2px solid black;
	background-color: #FF7A59;
}
main {
	grid-area: main;
	background-color: #F2F2F2;
	box-shadow: 0 0 0 100vmax #F2F2F2;
	clip-path: inset(0 -100vmax); 		
}
footer {
	border-top: 2px solid black;
	padding-top: 1em;
	grid-area: footer;
	display: flex;
	justify-content: space-evenly;
	background-color: #acacac;
}


/*Implementation of task 4. Use font 'source sans pro' if available on all headers on the website.*/
h1,h2{
font-family: 'Source Sans Pro', sans-serif;
font-size: 1.8em;
}

@font-face {
	font-family: 'Open Sans';
	src: url('fonts/OpenSans-Regular.ttf');
}

p, summary{
	font-family: system-ui, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
	font-size: 1em;
	/*font-family: Arial, Helvetica, sans-serif, Times, serif;*/
}

legend, label, option, button{
	font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
	font-size: 0.9em;
}


span{
	font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
	font-size: 1em;
}


/*Implementation of task 3b, use CSS grid layout to create a responsive header.*/
header {
	display: grid;
	grid-template: 
		"logo title" auto
		"logo desc" auto
		"nav nav" auto
		/ 1fr 2fr;
}
#headerLogo {
	grid-area: logo;
	width:120px;
	height: 100px;
}
#headerTitle {
	grid-area: title;
}
#headerDesc {
	grid-area: desc;
}
/*Implementation of task 3a and b. The element is using flexbox to evenly and responsivly space the navigation links.
The element is also using relative sizes for width.*/
#primNav {
	margin: 1em;
	margin-top: 2em;
	margin-bottom: 2em;
	grid-area: nav;
	width: 100%;
	display: flex;
	justify-content: space-evenly;
}
/*Decorating all the a elements in the element that has the primNav id attribute. It is decorated as a button.*/
#primNav a {
	color:white;
	text-decoration: none;
	font-weight: normal;
	border-radius: 5px;
	padding:10px;
	width:6.5em;
	background-color: #828282;
	border: 2px solid black;
	align-items: center;
	display: flex;
	
}
/*Change the border color and background color of the a element inside an element with the primNav id attribute.*/
#primNav a:hover {
	border: 2px solid red;
	background-color: #3c3c3d;
}
/*Decorate the background of an icon. This is for task I.7*/
.iconBackground {
	width: 24px;
	height: 24px;
	border-radius: 100%;
	display: inline-block;
	margin-right: 0.5625rem;
	padding: 3px;
	border-color: red;
	background-color: #FF7A59;
}
/*Default width and height size for all icons used in our website. This is for task I.7*/
.iconSize {
	width:24px;
	height:24px;
}

#content{
	float:inline-start;
	position: relative;
	max-width: 50em;
}

/*Implementation of task 3b, use Css grid layout to create a responsive main.*/
#funFact {
	border: 3px solid black;
	border-radius: 10px;
	background-color: #FF7A59;
	text-align: center;
	padding-left:  2%;
	padding-right: 2%;
	float:left;
}

#questions {
	border: 5px solid black;
	padding: 1em;
	border-spacing: 1em;
	border-radius: 10px;
	background-color: #FF7A59;
	min-height: 1em;
	max-width: 17.5em;
}

#questions summary:hover{
	cursor: pointer;
	background-color: #ec5f3c;
}


#jumpToTop{
	margin: 1em;
	margin-top: 2em;
	margin-bottom: 2em;
	display: flex;
	vertical-align: middle;
	justify-content: space-evenly;
	width: 100%;
}

#jumpToTop a{
	color: black;
	text-decoration: none;
	font-weight: normal;
	border-radius: 8px;
	border: 3px solid black;
	padding:5px;
	width:8em;
	background-color: #FF7A59;
	border: 2px solid black;
	align-items: center;
	display: flex;
}

#jumpToTop :hover{
	background-color: #b1adac;
}

main {
	display: grid;
	grid-template:
		"forms" auto
		"article" auto
		"figure" auto
		"iframe" auto
		"faq" auto
		"jumpToTop" auto
		/ 1fr;
	gap: 20px;
	justify-items: center;
}
#orderTrainTicket {
	grid-area: forms;
}
#pictureTrain {
	grid-area: figure;
	min-width: 100px;
}
#ourService {
	grid-area: article;
	margin: 1em;
}
#content {
	grid-area: article;
	margin: 1em;
	margin-top: 0px;
}
#iframeMaps {
	grid-area: iframe;
	margin: 1em;
}
#questions {
	grid-area: faq;
	margin: 1em;
}
#jumpToTop {
	grid-area: jumpToTop;
}

#textForIframe {
	float: right;
}

#textForIframe abbr{
	cursor: help;
}

#orderTrainTicket {
	margin-top: 2em;
}
#orderTrainTicket > * {
	font-size: 20px;
}


/*Implementation of task 3b, use CSS grid layout to create a responsive form.*/
#formContainer {
	margin-top: 1em;
	display: grid;
	grid-template: 
		"depS desS" 2em
		"date time" 2em
		"nT nT" 2em
		"getT getT" 2em
		/ 1fr 1fr;
	justify-items: center;
	gap: 1em;
}
#depSDiv {
	grid-area: depS;
}
#desSDiv {
	grid-area: desS;
}
#dateDiv {
	grid-area: date;
}
#timeDiv {
	grid-area: time;
}
#nTDiv {
	grid-area: nT;
}

#getTravel {
	grid-area: getT;
	cursor: pointer;
	box-shadow: 0 4px #F2F2F2;
	border: 1px solid grey;
	border-radius: 4px;
	background-color: white;
}

/*Implementation of task 6. Use pseudo to make the form interactive, by showing the user which element they have focused, as seen in lecture week 37, slide 17.
Also style submit button to imitate a physical button, as seen in lecture week 37, slide 21.*/
#getTravel:hover {
	background-color: #d8d8d8;
	border: 1px solid grey;
	border-radius: 4px;
}
#getTravel:active {
	box-shadow: 0px 2px #999;
	border:none;
	border-radius: 4px;
}
#departStation:focus {
	background-color: #e2e2e2;
}
#destinationStation:focus {
	background-color: #e2e2e2;
}
#date:focus {
	background-color: #e2e2e2;
}
#time:focus {
	background-color: #e2e2e2;
}
#numTravelers:focus {
	background-color: #e2e2e2;
}





/*Implementation of task 5. Uses media queriess to get a mobile first responsive design. As seen in lecture week 38, slide 106-112.
The default design is optimised for mobile devices, and the design for landscape mode is only loaded if needed, saving resources for mobile devices.*/
@media (min-width: 45em) {
	#mainContainer {
		grid-template: 
			"header header header" auto
			". main . " auto
			"footer footer footer" auto
			/ 40px auto 40px;
	}

	main {
		grid-template:
			"forms forms forms forms" auto
			"article article article figure" auto
			"iframe iframe faq faq" auto
			". jumpToTop jumpToTop ." auto
			/ 2fr 1fr 1fr 2fr;
	}

	#formContainer {
		margin-top: 1em;
		display: grid;
		grid-template: 
			"depS depS desS desS" 2em
			"date time time nT" 2em
			". getT getT ." 2em
			/ 2fr 1fr 1fr 2fr;
		justify-items: center;
		gap: 1em;
	}
}
